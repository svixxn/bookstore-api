version: '3.8'

services:
  api-gateway:
    build:
      context: .
      dockerfile: ./apps/bookstore-api-gateway/Dockerfile
    ports:
      - '3000:3000'
    environment:
      DATABASE_URL: 'postgresql://user:password@db:5432/bookstore_db'
      USERS_SERVICE_HOST: users-service
      BOOKS_SERVICE_HOST: books-service
      REDIS_HOST: 'redis'
      REDIS_PORT: '6379'
    depends_on:
      - users-service
      - books-service
      - redis
    networks:
      - nestjs-network
    restart: always

  users-service:
    build:
      context: .
      dockerfile: ./apps/users/Dockerfile
    environment:
      DATABASE_URL: 'postgresql://user:password@db:5432/bookstore_db'
      REDIS_HOST: 'redis'
      REDIS_PORT: '6379'
      USERS_SERVICE_HOST: users-service
    depends_on:
      - db
      - redis
    networks:
      - nestjs-network
    restart: always

  books-service:
    build:
      context: .
      dockerfile: ./apps/books/Dockerfile
    environment:
      DATABASE_URL: 'postgresql://user:password@db:5432/bookstore_db'
      REDIS_HOST: 'redis'
      REDIS_PORT: '6379'
      BOOKS_SERVICE_HOST: books-service
    depends_on:
      - db
      - redis
    networks:
      - nestjs-network
    restart: always

  db:
    image: postgres:13
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: bookstore_db
    networks:
      - nestjs-network
    restart: always

  redis:
    image: redis:6-alpine
    networks:
      - nestjs-network
    restart: always

volumes:
  db-data:

networks:
  nestjs-network:
    driver: bridge
